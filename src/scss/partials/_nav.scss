/**
 * Global Page Navigation
 * =================================
 * Styles relating to the global site navigation
 *
 */

 @use '../fozzie-config' as f;
 @use '../variables-common' as v;

$nav-text-size                     : 'body-l';
$nav-text-font                     : f.$font-family-base;
$nav-text-color                    : f.$color-content-link;
$nav-text-color--hover             : darken(f.$color-content-link, f.$color-hover-01);
$nav-text-color--transparent       : f.$color-content-link-inverse;
$nav-text-weight                   : f.$font-weight-bold;
$nav-text-subFont                  : f.$font-family-base;
$nav-text-color--narrow            : f.$color-content-default;
$nav-icon-color                    : $nav-text-color;
$nav-icon-color--transparent       : $nav-text-color--transparent;
$nav-transition-duration           : 250ms;

$nav-trigger-width                 : 56px;
$nav-trigger-height                : 56px;
$nav-trigger-focus-color           : f.$color-content-interactive-secondary;
$nav-trigger-focus-bg              : f.$color-interactive-secondary;
$nav-toggleIcon-left               : f.spacing(d);
$nav-toggleIcon-width              : 21px;
$nav-toggleIcon-height             : 2px;
$nav-toggleIcon-borderRadius       : 1px;
$nav-toggleIcon-color              : $nav-icon-color;
$nav-toggleIcon-color--transparent : $nav-icon-color--transparent;
$nav-toggleIcon-bg                 : transparent;
$nav-toggleIcon-space              : 5px;


$nav-tooltip-width                 : 10px;

$nav-popover-width                 : 300px;
$nav-popover-radius                : f.$radius-rounded-c;
$nav-popover-transition-duration   : 200ms;
$nav-popover-transition-delay      : 200ms;
$nav-popover-padding               : f.spacing(d);


@mixin nav-container-visible () {
    overflow-y: auto;
    left: 0;
    opacity: 1;
    z-index: zIndex(high);
    transition: opacity $nav-transition-duration ease-in-out,
                z-index 0s linear;
}

// removes scroll
.is-navInView {
    @include f.media('<mid') {
        overflow: hidden;

        body {
            position: fixed;
            width: 100%;
            padding-top: v.$header-height--narrow;

            @at-root .is-multiLanguage#{&} {
                padding-top: v.$header-height--narrow--multiLang;
            }
        }
    }
}

// If the header is already fixed/absolute (like when the header is transparent)
// then the content doesn't need to be padded down when the nav comes into view, as it's already flush with the top of the screen
// This is added in the f-header JS
.is-navInView--noPad {
    body {
        padding-top: 0;
    }
}

// Global site-wide navigation
.c-nav--global {
    @include f.media('>=mid') {
        display: flex;
        justify-content: flex-end;
        flex-grow: 1;
    }

    // we have a nav container so that we don’t have to make the inner list 100% height
    // this is so we can position the logout button last on mobile
    & .c-nav-container {
        @include f.media('<mid') {
            position: fixed;
            top: v.$header-height--narrow;
            left: -99999px;
            width: 100%;
            padding: 0;
            height: calc(100% - (#{v.$header-height--narrow}));
            border-top: v.$header-separator solid v.$header-border-color;
            background: f.$color-container-default;
            z-index: -1;
            opacity: 0;
            transition: opacity $nav-transition-duration ease-in-out,
                        z-index 0s linear $nav-transition-duration,
                        left 0s linear ($nav-popover-transition-delay + $nav-popover-transition-duration);

            &.is-visible {
                @include nav-container-visible();
            }

            .is-multiLanguage & {
                top: v.$header-height--narrow--multiLang;
                height: calc(100% - (#{v.$header-height--narrow--multiLang}));
            }
        }
    }
}

.c-nav-list {
    position: relative;
}
.c-nav-list,
.c-nav-popoverList {
    @extend %u-unstyled;

    @include f.media('<mid') {
        display: flex;
        flex-direction: column;
    }
}
    .c-nav-list-item {
        margin-bottom: 0;

        // TODO: MAKE THIS NOT USE FLOATS
        // global modifier for list items horizontally aligned
        .c-nav--global & {
            @include f.media('>=mid') {
                float: left;
            }
        }
    }

    // Modifier to position a nav-list-item at the bottom of the mobile navigation
    // As an example, this is used on the logout link on the global site
    // Logout is in the popover list, but at the bottom of the
    .c-nav-list-item--forceLast {
        @include f.media('<mid') {
            position: absolute;
            top: 100%;
            width: 100%;
        }
    }
        .c-nav-list-link,
        .c-nav-list-text {
            display: block;
            padding: f.spacing(c) f.spacing(d);
            margin: 0;
            font-family: $nav-text-subFont;
            color: $nav-text-color--narrow;
            @include f.font-size(body-s);
            font-weight: f.$font-weight-regular;
            text-decoration: none;
            border-bottom: 1px solid f.$color-border-strong;

            @include f.media('>=mid') {
                font-family: $nav-text-font;
                @include f.font-size($nav-text-size);
                font-weight: $nav-text-weight;
                color: $nav-text-color;
                border-bottom: none;

                // the following styles align the elements vertically to the height of the header bar
                // don’t need a fallback, as it degrades gracefully
                display: flex;
                align-items: center;
                height: v.$header-height;

                .c-header--transparent & {
                    color: $nav-text-color--transparent;
                }
            }
        }
        .c-nav-list-text-sub {
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            max-width: 300px;
        }

        .c-nav-list-link {
            &:hover,
            &:focus,
            &:active {
                text-decoration: none;

                @include f.media('>=mid') {
                    color: $nav-text-color--hover;
                    text-decoration: underline;

                    .c-header--transparent & {
                        color: $nav-text-color--transparent;
                    }

                    .c-header--transparent .c-nav-popoverList & {
                        color: inherit;
                    }
                }
            }
        }

    .has-sublist {
        // ensures the dropdown/popover is relative to the hover element, on wider views
        @include f.media('>=mid') {
            position: relative;
            cursor: pointer;

            // // display and size icon on sub element
            // & > .icon {
            //     background-size: 9px 6px;
            //     background-position: right center; //fallback
            //     background-position: right 10px center;
            //     padding-right: $horizSpacing * 1.5;
            // }
        }
    }

    // Icons, such as the profile icon
    .c-nav-icon {
        float: left;
        margin-right: f.spacing();

        @include f.media('>=mid') {
            & path {
                fill: $nav-icon-color;
                .c-header--transparent & {
                    fill: $nav-icon-color--transparent;
                }
            }
        }
    }

// Nav Popover list
// Used for a list of navigation items that drops down when hovering over a list item in the navigation
// (only appears on wider views, so all wrapped in media query)
.c-nav-popoverList {
    @include f.media('>=mid') {
        position: absolute;
        top: 100%;
        right: 99999px; // offscreen, so can’t ever be hovered over by default
        width: $nav-popover-width;
        background-color: f.$color-container-default;
        box-shadow: 0 2px 40px rgba(0, 0, 0, 0.2);
        border-radius: $nav-popover-radius;
        padding: 0 $nav-popover-padding;
        opacity: 0;
        z-index: -1;
        transition: opacity $nav-popover-transition-duration ease-in-out $nav-popover-transition-delay,
                    z-index 0s linear ($nav-popover-transition-delay + $nav-popover-transition-duration),
                    right 0s linear ($nav-popover-transition-delay + $nav-popover-transition-duration);

        // tooltip arrow
        &:before {
            bottom: 100%;
            right: 10%;
            border: $nav-tooltip-width solid transparent;
            border-bottom: $nav-tooltip-width solid f.$color-container-default;
            content: '';
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        & .c-nav-list-item {
            float: none;
            border-bottom: 1px solid f.$color-border-default;

            &:last-child {
                border-bottom: none;

                & .c-nav-list-link,
                & .c-nav-list-text {
                    border-radius: 0 0 $nav-popover-radius $nav-popover-radius;
                }
            }
        }

            & .c-nav-list-link,
            & .c-nav-list-text {
                font-family: $nav-text-subFont;
                font-weight: f.$font-weight-regular;
                color: f.$color-content-default;
                height: auto;

                &:hover,
                &:focus {
                    font-weight: f.$font-weight-bold;
                    text-decoration: none;
                }
            }

        // display the popover when our parent item is hovered
        .has-sublist:hover &,
        .has-sublist:focus &,
        .has-sublist:active & {
            opacity: 1;
            z-index: zIndex(high);
            right: 0;

            transition: opacity $nav-popover-transition-duration ease-in-out,
                        z-index 0s linear;
        }
    }
}



// Navigation Trigger
// This is the checkbox that controls the menu active state without JS via :checked
.c-nav-trigger {
    position: absolute;
    top: -100px;
    left: -100px;

    @include f.media('>=mid') {
        display: none;
    }

    &:checked ~ .c-nav-container {
        @include f.media('<mid') {
            @include nav-container-visible();
        }
    }

    &:focus ~ .c-nav-toggle {
        background-color: $nav-trigger-focus-bg;
        box-shadow: 0 0 6px 0 $nav-trigger-focus-color;

        .c-header--transparent & {
            background-color: transparent;
        }
    }
}

// Navigation Toggle
// Only shown at narrow widths (Hamburger Menu icon)
.c-nav-toggle {
    position: absolute;
    top: 0;
    left: 0;
    width: $nav-trigger-width;
    height: $nav-trigger-height;
    cursor: pointer;

    // hide on wider views
    // TODO – ACCESSIBILITY MAY NOT WANT TO COMPLETELY HIDE THIS
    @include f.media('>=mid') {
        display: none;
    }
}

    // The Toggle Icon (hamburger icon)
    .c-nav-toggle-icon {
        display: block;
        top: 50%;
        left: $nav-toggleIcon-left;
        width: $nav-toggleIcon-width;
        text-indent: -150px;
        white-space: nowrap;
        transition: background-color $nav-transition-duration ease-in;

        // Apply these styles to the base icon element and its created pseudo elements
        &,
        &:before,
        &:after {
            position: absolute;
            height: $nav-toggleIcon-height;
            background-color: $nav-toggleIcon-color;
            border-radius: $nav-toggleIcon-borderRadius;

            .c-header--transparent & {
                background-color: $nav-toggleIcon-color--transparent;
            }
        }

        &:before,
        &:after {
            content: '';
            width: 100%;
            left: 0;
            transition: all $nav-transition-duration ease-in-out;
        }
        &:before {
            top: -($nav-toggleIcon-space + $nav-toggleIcon-height);
        }
        &:after {
            top: ($nav-toggleIcon-space + $nav-toggleIcon-height);
        }
    }

    // Icon active state
    // Shown when the checkbox is checked or the `is-open` class is present.
    .c-nav-trigger:checked ~ .c-nav-toggle,
    .c-nav-toggle.is-open {
        & > .c-nav-toggle-icon {
            background-color: $nav-toggleIcon-bg;

            &:before,
            &:after {
                top: 0;
            }
            &:before {
                transform: rotate(45deg);
            }
            &:after {
                transform: rotate(-45deg);
            }
        }
    }
