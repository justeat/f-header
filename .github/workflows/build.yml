name: Build

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
  push:
    branches:
      - master

jobs:
    install:
      runs-on: ubuntu-latest
      steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
      # Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      # Restore node_modules if cache exists. If not, cache is created at end of build.
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      # Run 'yarn' if cache doesn't exist. Use --prefer-offline to download packages from yarn cache folder where possible
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn --prefer-offline --ignore-scripts

    build:
      needs: install
      runs-on: ubuntu-latest
      steps:
      # Checkout the Repo
      - name: Checkout
        uses: actions/checkout@v3
      # Setup Node 16
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      # Restore node_modules - Cache should exist as one was created in previous 'install' job
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: node-modules-${{ hashFiles('**/yarn.lock') }}
      # Lint Styles
      - name: Lint Styles
        run: yarn lint:style
      # Lint JS
      - name: Lint JavaScript
        run: yarn lint:scripts
      # Check Build of CSS files
      - name: Build Package CSS (to check it compiles correctly)
        run: yarn build:css
      # Run Unit Tests
      - name: Unit Tests
        run: yarn test
      # Run DangerJS
      - name: PR Checks (Dangerfile)
        run: yarn danger ci
